:root {
  /* --gametime: 30s; */
  --timerglow: calc(var(--gametime) * 0.1);
  --timerglow-delay: calc(var(--gametime) * 0.9);
  --fish-move-duration: 5s;
  --garbage-move-duration: 6s;
  --fish-start: -15%;
  --fish-width: 15%;
}

body {
  margin: 0;
}

img {
  width: 100%;
}

#screen {
  /* create a grid with only one cell */
  display: grid;
  grid-template-columns: 100%;
  grid-template-rows: 100%;
  /* make a 16:9 sized box that takes on the width of the window */
  aspect-ratio: 16 / 9;
  width: 100%;
}

#game {
  grid-area: 1 / 1;
  /* background-color: blue; */
  overflow: hidden;
  /* create a grid with only one cell */
  display: grid;
  grid-template-columns: 10% / 10%;
  grid-template-rows: 100%;
}

#game_background,
#game-over-background,
#start-background,
#level-complete-background {
  grid-area: 1 / 1;
  background-image: url(img/background.jpg);
  background-size: cover;
}

#game_elements {
  grid-area: 1 / 1;
  position: relative;
  overflow: hidden;
}

/* Game element containers and sprites */
#fisherman_boat_container {
  width: 25%;
  position: absolute;
  top: 12%;
  left: 35%;
}
#bag_container {
  width: 9%;
  position: absolute;
  /* top: 55%; */
  left: -10%;
}
#can_container {
  width: 5%;
  position: absolute;
  /* top: 70%; */
  left: -10%;
}
#battery_container {
  width: 3%;
  position: absolute;
  /* top: 43%; */
  left: -10%;
}
#bottle_container {
  width: 8%;
  position: absolute;
  /* top: 48%; */
  left: -10%;
}
#plastic_container {
  width: 5%;
  position: absolute;
  /* top: 65%; */
  left: -10%;
}

.position1 {
  top: 35%;
}

.position2 {
  top: 47.5%;
}

.position3 {
  top: 60%;
}

.position4 {
  top: 72.5%;
}

.position5 {
  top: 85%;
}

#fish1_container {
  width: var(--fish-width);
  position: absolute;
  /* top: 32%; */
  left: var(--fish-start);
}

#fish2_container {
  width: var(--fish-width);
  position: absolute;
  /* top: 39%; */
  left: var(--fish-start);
}
#fish3_container {
  width: var(--fish-width);
  position: absolute;
  /* top: 48%; */
  left: var(--fish-start);
}
#fish4_container {
  width: var(--fish-width);
  position: absolute;
  /* top: 57%; */
  left: var(--fish-start);
}
#fish5_container {
  width: var(--fish-width);
  position: absolute;
  /* top: 67%; */
  left: var(--fish-start);
}
#fish6_container {
  width: var(--fish-width);
  position: absolute;
  top: 72%;
  left: var(--fish-start);
}
#fish7_container {
  width: var(--fish-width);
  position: absolute;
  top: 77%;
  left: var(--fish-start);
}
#fish8_container {
  width: var(--fish-width);
  position: absolute;
  top: 83%;
  left: var(--fish-start);
}
#fish9_container {
  width: var(--fish-width);
  position: absolute;
  top: 90%;
  left: var(--fish-start);
}

#fisherman_boat_sprite {
  width: 100%;
}
#bag_sprite {
  width: 100%;
}
#can_sprite {
  width: 100%;
}
#battery_sprite {
  width: 100%;
}
#bottle_sprite {
  width: 100%;
}
#plastic_sprite {
  width: 100%;
}
#fish1_sprite {
  width: 100%;
}
#fish2_sprite {
  width: 100%;
}
#fish3_sprite {
  width: 100%;
}
#fish4_sprite {
  width: 100%;
}
#fish5_sprite {
  width: 100%;
}
#fish6_sprite {
  width: 100%;
}
#fish7_sprite {
  width: 100%;
}
#fish8_sprite {
  width: 100%;
}
#fish9_sprite {
  width: 100%;
}

/* #game_ui {
  display: grid;
  grid-template-columns: auto auto auto;
  position: fixed;
  top: 1em;
  left: 10em;
} */
#game_ui {
  grid-area: 1 / 1;
  /* position: relative; */
}

#game_ui_container {
  /* display: grid;
  grid-template-columns: 1fr 1fr 1fr 1fr 1fr 1fr 1fr;
  grid-template-rows: auto auto auto;
  text-align: center; */
  display: grid;
  grid-template-columns: repeat(9, 11.11vw);
  grid-template-rows: repeat(10, 5.625vw);
  /* text-align: center; */
}

#score_board {
  display: grid;
  grid-template-columns: 1fr 1fr;
  grid-area: 1 / 2;
  text-align: center;
  align-self: center;
  justify-self: center;
  /* z-index: 1; */
}

#score_logo {
  width: 65%;
}

#score {
  align-self: center;
  font-size: 150%;
  font-family: sans-serif;
}

#time_board {
  grid-area: 1 / 4 / 2 / span 3;
  align-self: center;
  border: solid;
  border-radius: 1em;
  overflow: hidden;
}

#life_board {
  display: grid;
  grid-area: 1 / 8;
  grid-template-columns: 1fr 1fr 1fr;
  align-self: center;
  gap: 0.5em;
  /* z-index: 1; */
}

#timebar {
  height: 1em;
  background: linear-gradient(to bottom, red, #900);
}

.hidden {
  display: none;
  visibility: hidden;
}

#start,
#game-over,
#level-complete {
  grid-area: 1 / 1;
  /* background-color: blue; */
  overflow: hidden;
  /* create a grid with only one cell */
  display: grid;
  grid-template-columns: 10% / 10%;
  grid-template-rows: 100%;
}

#menu-container,
#menu-how-to-play-container,
#game-over-container,
#level-complete-container {
  grid-area: 1 / 1;
  display: grid;
  grid-template-columns: repeat(11, 10vw);
  grid-template-rows: repeat(10, 5.625vw);
  position: relative;
}

.menu-header {
  grid-area: 3 / 4 / 4 / 8;
  font-family: "Games", sans-serif;
  text-align: center;
  color: black;
  z-index: 1;
  background-size: cover;
}

.menu-header h1 {
  font-size: 3vw;
}

.menu {
  grid-area: 2 / 4 / 8 / 8;
  position: relative;
}

.start-btn {
  grid-area: 4 / 5 / 6 / 7;
  justify-self: center;
  align-self: center;
  position: absolute;
}

.start-btn > button {
  font-family: "Games", sans-serif;

  background-color: rgb(0, 94, 255);
  color: white;
  border: solid;
  border-radius: 1em;
  border-color: black;
  width: 12em;
  height: 4em;
  font-size: 2vw;
}

.how-to-play-btn {
  grid-area: 6 / 5 / 8 / 7;
  justify-self: center;
  align-self: center;
  position: absolute;
}

.how-to-play-btn > button {
  font-family: "Games", sans-serif;
  background-color: rgb(0, 94, 255);
  color: white;
  border: solid;
  border-radius: 1em;
  border-color: black;
  width: 12em;
  height: 4em;
  font-size: 2vw;
}

.rankings-btn {
  grid-area: 8 / 5 / 10 / 7;
  justify-self: center;
  align-self: center;
  position: absolute;
}

.rankings-btn > button {
  font-family: "Games", sans-serif;
  background-color: rgb(0, 94, 255);
  color: white;
  border: solid;
  border-radius: 1em;
  border-color: black;
  width: 12em;
  height: 4em;
  font-size: 2vw;
}

.menu-fisher {
  width: 30%;
  top: 21%;
  left: 0;
  position: absolute;
  margin-bottom: 0;
}

#how-to-play-text,
#game-over-text,
#level-complete-text {
  grid-area: 4 / 5 / 9 / 7;
  z-index: 0;
  font-family: "Games", sans-serif;
  font-weight: bold;
  color: rgb(47, 107, 237);
  font-size: 1.9vw;
}

.back-btn {
  grid-area: 8 / 5 / 10 / 7;
  justify-self: center;
  align-self: center;
  position: absolute;
}

.back-btn > button {
  font-family: "Games", sans-serif;

  background-color: rgb(0, 94, 255);
  color: white;
  border: solid;
  border-radius: 1em;
  border-color: black;
  width: 8em;
  height: 3em;
  font-size: 2vw;
}

button:hover {
  opacity: 0.8;
  cursor: pointer;
  background-color: green;
}

#game-over-container > .start-btn {
  grid-area: 6 / 5 / 8 / 7;
  justify-self: center;
  align-self: center;
  position: absolute;
}

#level-complete-container > .start-btn {
  grid-area: 6 / 5 / 8 / 7;
  justify-self: center;
  align-self: center;
  position: absolute;
}

.menu-fisher-sprite {
  width: 100%;
}

/* Animations */
.rotate {
  animation: rotate;
  animation-duration: 10s;
  animation-delay: 0.75;
  animation-timing-function: linear;
  animation-iteration-count: infinite;
}

@keyframes rotate {
  0% {
    transform: rotate(0);
  }
  25% {
    transform: rotate(30deg);
  }
  50% {
    transform: rotate(0);
  }
  75% {
    transform: rotate(30deg);
  }
  100% {
    transform: rotate(0);
  }
}

.move {
  animation: move;
  animation-duration: var(--fish-move-duration);
  animation-timing-function: linear;
  animation-iteration-count: infinite;
  animation-fill-mode: forwards;
}

@keyframes move {
  0% {
    transform: translate(0, 0);
  }
  100% {
    transform: translate(200vw, 0);
  }
}

.move_slow {
  animation: move_slow;
  animation-duration: var(--garbage-move-duration);
  animation-timing-function: linear;
  animation-iteration-count: infinite;
  animation-fill-mode: forwards;
}

@keyframes move_slow {
  0% {
    transform: translate(0, 0);
  }
  100% {
    transform: translate(200vw, 0);
  }
}

.zoom_out_rotate {
  animation: zoom_out_rotate;
  animation-duration: 1s;
  animation-timing-function: linear;
  animation-fill-mode: forwards;
}

@keyframes zoom_out_rotate {
  100% {
    transform: scale(0) rotate(365deg);
  }
}

.zoom_out {
  animation: zoom_out;
  animation-duration: 0.5s;
  animation-timing-function: linear;
  animation-fill-mode: forwards;
}

@keyframes zoom_out {
  0% {
    transform: scale(0.4);
  }
  100% {
    transform: scale(0);
  }
}

.glow {
  animation: glow;
  animation-duration: var(--timerglow);
  animation-delay: var(--timerglow-delay);
  animation-timing-function: linear;
}

@keyframes glow {
  0% {
    filter: drop-shadow(0 0 0 rgb(255, 234, 0));
  }
  10% {
    filter: drop-shadow(0 0 16px rgb(255, 234, 0));
  }
  20% {
    filter: drop-shadow(0 0 0 rgb(255, 234, 0));
  }
  30% {
    filter: drop-shadow(0 0 16px rgb(255, 234, 0));
  }
  40% {
    filter: drop-shadow(0 0 0 rgb(255, 234, 0));
  }
  50% {
    filter: drop-shadow(0 0 16px rgb(255, 234, 0));
  }
  60% {
    filter: drop-shadow(0 0 0 rgb(255, 234, 0));
  }
  70% {
    filter: drop-shadow(0 0 16px rgb(255, 234, 0));
  }
  80% {
    filter: drop-shadow(0 0 0 rgb(255, 234, 0));
  }
  90% {
    filter: drop-shadow(0 0 16px rgb(255, 234, 0));
  }
  100% {
    filter: drop-shadow(0 0 0 rgb(255, 234, 0));
  }
}

.scaleX {
  animation: scaleX;
  animation-duration: var(--gametime);
  animation-timing-function: linear;
  transform-origin: left center;
  animation-fill-mode: forwards;
}

@keyframes scaleX {
  100% {
    transform: scaleX(0.0001);
  }
}

/* Class to pause animations */
.paused {
  animation-play-state: paused;
}
